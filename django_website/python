from neo4j import GraphDatabase
from GSVPanoramaManager import settings
import re

print("Opening neo4j connection")
db_settings = settings.NEO4J_DATABASES['default']
uri = 'bolt://' + db_settings['HOST'] + ':' + db_settings['PORT']
auth = (db_settings['USER'], db_settings['PASSWORD'])
_driver = GraphDatabase.driver(uri, auth=auth)
print("Starting session for panoramas")
with _driver.session() as session:
    
    shortDescriptionGroups = session.run((
        "MATCH (p:Panorama)"
        "RETURN DISTINCT(p.shortDescription), COUNT(p)"
    ))
    shortDescriptionGroups = shortDescriptionGroups.values()
    if shortDescriptionGroups[-1][0] is None:
        del shortDescriptionGroups[-1]
    import re
    shortDescriptionGroups = [[re.sub(r'^\d+\s(\w)', r'\1', y[0]), y[1]] for y in shortDescriptionGroups]
    addressDict = dict.fromkeys([y[0] for y in shortDescriptionGroups], 0)
    for address in shortDescriptionGroups:
        addressDict[address[0]] += address[1]
    with open('export_address_panoramas.csv', 'w+') as expf:
        for k, v in addressDict.items():
            expf.write(k+','+str(v)+'\n')


#!/usr/bin/env python
"""
Command-line utility for administrative tasks.
"""

import os
import sys


if __name__ == "__main__":
    os.environ.setdefault(
        "DJANGO_SETTINGS_MODULE",
        "django_website.settings"
    )

    from django.core.management import execute_from_command_line

    execute_from_command_line(sys.argv)



